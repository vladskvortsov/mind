version: '3.8'

services:
  backend_rds:
    image: 194722414339.dkr.ecr.eu-north-1.amazonaws.com/project1-backend:backend-rds
    container_name: backend_rds
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
    ports:
      - "8000:8000"
    networks:
      - backend
    entrypoint: ["sh", "-c", "sleep 10 && python manage.py runserver 0.0.0.0:8000"]

  backend_redis:
    image: 194722414339.dkr.ecr.eu-north-1.amazonaws.com/project1-backend:backend-redis
    container_name: backend_redis
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: 6379
      REDIS_DB: ${REDIS_DB}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
    ports:
      - "8003:8003"
    networks:
      - backend
    entrypoint: ["sh", "-c", "sleep 10 && python manage.py runserver 0.0.0.0:8003"]

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
    driver: local
